{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Button.js","components/Numbers.js","services/api.js","components/Notification.js","App.js","index.js"],"names":["Filter","props","value","search","onChange","handleSearchFilter","PersonForm","onSubmit","handleInputEvent","newName","handleChange","newPhone","handlePhoneChange","type","Button","id","handleDelete","name","onClick","Numbers","filtered","map","person","i","key","number","baseUrl","axios","post","then","response","data","get","put","error","delete","Notification","message","className","App","useState","persons","setPersons","setNewName","setNewPhone","setSearch","notification","setNotification","useEffect","apiService","concat","check","filter","x","includes","event","target","preventDefault","window","confirm","setTimeout","console","log","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bc5f3f95.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Filter = (props) => {\r\n\r\n    \r\n\r\n    return(\r\n        <>\r\n            filter shown with: <input value={props.search} onChange={props.handleSearchFilter}/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Filter\r\n","import React from \"react\";\r\n\r\n\r\n\r\nconst PersonForm = (props) => {\r\n\r\n    return(\r\n        <>\r\n            <h2>\r\n                add a new\r\n            </h2>\r\n            <form onSubmit={props.handleInputEvent}>\r\n                <div>\r\n                    name: <input value={props.newName} onChange={props.handleChange}/>\r\n                </div>\r\n                <div>\r\n                    phone: <input value={props.newPhone} onChange={props.handlePhoneChange}/>\r\n                </div>\r\n                <button type={\"submit\"}>add</button>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default PersonForm\r\n","import React from \"react\";\r\n\r\n\r\nconst Button = ({id, handleDelete, name}) => {\r\n\r\n\r\n    return (\r\n        <>\r\n            <button onClick={() => handleDelete(id, name)}>delete</button>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default Button\r\n","import React from \"react\";\r\nimport Button from \"./Button\";\r\n\r\n\r\nconst Numbers = (props) => {\r\n    return(\r\n        <>\r\n            <h2>\r\n                Numbers\r\n            </h2>\r\n            {props.filtered.map((person, i) => <p key={i}>{person.name} {person.number} <Button id={person.id} handleDelete={props.handleDelete} name={person.name}/></p>)}\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default Numbers\r\n","import axios from 'axios'\r\n\r\nconst baseUrl = '/api/persons'\r\n\r\n\r\n\r\nconst create = (person) => {\r\n    return axios.post(baseUrl, person).then(response => response.data)\r\n}\r\n\r\nconst getAll = () => {\r\n    const request =  axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, person) => {\r\n    try {\r\n    const request = axios.put(`${baseUrl}/${id[0].id}`, person)\r\n    return request.then(response => response.data)\r\n} catch(error) {\r\n        return error\r\n    }\r\n\r\n}\r\n\r\nconst remove = (id) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response)\r\n}\r\n\r\n\r\n\r\nexport default {create, getAll, update, remove}\r\n","import React from 'react'\r\nimport './Notification.css'\r\n\r\n\r\n\r\nconst Notification = ({message}) => {\r\n    if(message === null) {\r\n        return null\r\n    }\r\n\r\n    return(\r\n        <div className={'notification'}>\r\n            <h2>{message}</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification\r\n","import React, {useState, useEffect} from 'react'\r\nimport Filter from \"./components/Filter\";\r\nimport PersonForm from \"./components/PersonForm\";\r\nimport Numbers from \"./components/Numbers\";\r\nimport apiService from './services/api'\r\nimport Notification from \"./components/Notification\";\r\n\r\nconst App =() => {\r\n    const [persons, setPersons] = useState([])\r\n    const [newName, setNewName] = useState('')\r\n    const [newPhone, setNewPhone] = useState('')\r\n    const [search, setSearch] = useState('')\r\n    const [notification, setNotification] = useState(null)\r\n\r\n    useEffect(() => {\r\n        apiService.getAll().then(data =>\r\n                setPersons(persons.concat(data)))\r\n    }, [])\r\n\r\n\r\n    const handleChange = (event) => {\r\n        setNewName(event.target.value)\r\n    }\r\n    const handlePhoneChange = (event) => {\r\n        setNewPhone(event.target.value)\r\n    }\r\n    const handleSearchFilter = (event) => {\r\n        setSearch(event.target.value)\r\n    }\r\n\r\n    let check = false\r\n\r\n    const handleInputEvent = (event) => {\r\n        event.preventDefault()\r\n        const person = {\r\n            name: newName,\r\n            number: newPhone\r\n        }\r\n        persons.map(x => {\r\n            if(x.name === newName){\r\n                check = true\r\n            }\r\n        })\r\n        check ? window\r\n                .confirm(`${newName} is aready added to phonebook, replace the old number with new one?`)\r\n            ? apiService\r\n                .update(persons.filter(person => {\r\n                if(person.name === newName){\r\n                    return person.id\r\n                }\r\n            }), person)\r\n                .then(data => {\r\n                setPersons(data)\r\n                setNotification(`phone of ${newName} has been updated`)\r\n                setTimeout(() => {\r\n                    setNotification(null)\r\n                }, 5000)\r\n            })\r\n            : console.log('no')\r\n            : apiService\r\n                .create(person).then(data => {\r\n                setPersons(persons.concat(data))\r\n                setNotification(`added ${newName}`)\r\n                setTimeout(() => {\r\n                    setNotification(null)\r\n                }, 5000)\r\n            })\r\n        setNewName('')\r\n        setNewPhone('')\r\n    }\r\n    const filtered = persons.filter(x => {\r\n        if (x.name.includes(search)) {\r\n            return x.name\r\n        }\r\n    })\r\n\r\n    const handleDelete = (id, name) => {\r\n        window.confirm(`Delete ${name} ?`)\r\n            ? apiService.remove(id).then(response => {\r\n                setNotification(`${name} has been successfully DELETED!`)\r\n                apiService.getAll().then(data =>\r\n                    setPersons(data))\r\n            })\r\n            : console.log('remove canceled')\r\n    }\r\n\r\n\r\n\r\n    return(\r\n        <>\r\n            <h2>\r\n                Phonebook\r\n            </h2>\r\n            <Notification message={notification}/>\r\n            <Filter search={search}\r\n                    handleSearchFilter={handleSearchFilter}\r\n            />\r\n            <PersonForm handleChange={handleChange}\r\n                        handlePhoneChange={handlePhoneChange}\r\n                        handleInputEvent={handleInputEvent}\r\n                        newName={newName}\r\n                        newPhone={newPhone}\r\n            />\r\n            <Numbers filtered={filtered} handleDelete={handleDelete}/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from \"./App\";\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"sourceRoot":""}